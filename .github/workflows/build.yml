name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check (fmt, clippy, test)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --workspace
    
    - name: Build
      run: cargo build --workspace --release

  build-cross-platform:
    name: Build Cross-Platform
    runs-on: ${{ matrix.os }}
    needs: check
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: rive-linux-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: rive-windows-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: rive-macos-x64
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build release
      run: cargo build --release --target ${{ matrix.target }} --bin rive
    
    - name: Prepare artifact
      shell: bash
      run: |
        mkdir -p dist
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          cp target/${{ matrix.target }}/release/rive.exe dist/
          cd dist && tar -czf ../${{ matrix.artifact }}.tar.gz rive.exe
        else
          cp target/${{ matrix.target }}/release/rive dist/
          cd dist && tar -czf ../${{ matrix.artifact }}.tar.gz rive
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}.tar.gz
        retention-days: 30
